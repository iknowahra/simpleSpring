<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--
	SQL File Name : userInfoSql.xml
	Description : 로그인 성공시 필요한 정보를 조회
	author iknowahra
	since 2024. 09. 18.
	version 1.0
	Modification Information
		since        author            description
	===========    =============    ===========================
	2024. 09. 18.		iknowahra 		   최초 생성
-->

<mapper namespace="com.spring.loginMvc.dao.UserInfoMapper">

    <select id="selectMenuListByUser" parameterType="ParamMap" resultType="ParamMap">
        /* QueryID=UserInfoMapper.selectMenuListByUser */
    <![CDATA[
        WITH MENU_LIST AS
                 (SELECT A.USER_ID
                       , F.MENU_SEQ
                       , F.MENU_ID
                       , (SELECT TXT_NM
                          FROM ZZ_MLTI_LANG_M
                          WHERE TP_CD = 'MNU' AND LANG_CD = #{gvLangCd} AND TXT_CD = F.MENU_ID) MENU_NM
                       , F.MENU_URL
                       , F.MENU_PATH
                       , F.UP_MENU_ID
                       , F.BTN1_NM_CD
                       , F.BTN2_NM_CD
                       , F.BTN3_NM_CD
                       , F.BTN4_NM_CD
                       , F.BTN5_NM_CD
                       , F.BTN6_NM_CD
                       , F.BTN7_NM_CD
                       , F.BTN8_NM_CD
                       , F.BTN9_NM_CD
                       , F.BTN10_NM_CD
                       , F.LOG_YN
                       , MAX(NVL(E.MENU_SHOW_YN, NVL(D.MENU_SHOW_YN, 'N')))   AS                MENU_SHOW_YN
                       , MAX(NVL(E.CRT_AUTH_YN, NVL(D.CRT_AUTH_YN, '0')))     AS                CRT_AUTH_YN
                       , MAX(NVL(E.SRCH_AUTH_YN, NVL(D.SRCH_AUTH_YN, '0')))   AS                SRCH_AUTH_YN
                       , MAX(NVL(E.SAV_AUTH_YN, NVL(D.SAV_AUTH_YN, '0')))     AS                SAV_AUTH_YN
                       , MAX(NVL(E.DEL_AUTH_YN, NVL(D.DEL_AUTH_YN, '0')))     AS                DEL_AUTH_YN
                       , MAX(NVL(E.PRT_AUTH_YN, NVL(D.PRT_AUTH_YN, '0')))     AS                PRT_AUTH_YN
                       , MAX(NVL(E.EXL_AUTH_YN, NVL(D.EXL_AUTH_YN, '0')))     AS                EXL_AUTH_YN
                       , MAX(NVL(E.ETC_1AUTH_YN, NVL(D.ETC_1AUTH_YN, '0')))   AS                ETC_1AUTH_YN
                       , MAX(NVL(E.ETC_2AUTH_YN, NVL(D.ETC_2AUTH_YN, '0')))   AS                ETC_2AUTH_YN
                       , MAX(NVL(E.ETC_3AUTH_YN, NVL(D.ETC_3AUTH_YN, '0')))   AS                ETC_3AUTH_YN
                       , MAX(NVL(E.ETC_4AUTH_YN, NVL(D.ETC_4AUTH_YN, '0')))   AS                ETC_4AUTH_YN
                       , MAX(NVL(E.ETC_5AUTH_YN, NVL(D.ETC_5AUTH_YN, '0')))   AS                ETC_5AUTH_YN
                       , MAX(NVL(E.ETC_6AUTH_YN, NVL(D.ETC_6AUTH_YN, '0')))   AS                ETC_6AUTH_YN
                       , MAX(NVL(E.ETC_7AUTH_YN, NVL(D.ETC_7AUTH_YN, '0')))   AS                ETC_7AUTH_YN
                       , MAX(NVL(E.ETC_8AUTH_YN, NVL(D.ETC_8AUTH_YN, '0')))   AS                ETC_8AUTH_YN
                       , MAX(NVL(E.ETC_9AUTH_YN, NVL(D.ETC_9AUTH_YN, '0')))   AS                ETC_9AUTH_YN
                       , MAX(NVL(E.ETC_10AUTH_YN, NVL(D.ETC_10AUTH_YN, '0'))) AS                ETC_10AUTH_YN
                  FROM ZZ_USER_M A
                           INNER JOIN ZZ_AUTH_USER_M B ON A.USER_ID = B.USER_ID
                           INNER JOIN ZZ_AUTH_GRP_M C ON B.GRP_ID = C.GRP_ID
                           LEFT OUTER JOIN ZZ_MENU_GRP_M D ON B.GRP_ID = D.GRP_ID
                           LEFT OUTER JOIN ZZ_MENU_M F ON F.MENU_ID = D.MENU_ID
                           LEFT OUTER JOIN ZZ_MENU_USER_M E ON A.USER_ID = E.USER_ID AND F.MENU_ID = E.MENU_ID
                  WHERE 1 = 1
                    AND A.USER_ID = #{gvUserId}
                  GROUP BY A.USER_ID
                         , F.MENU_SEQ
                         , F.MENU_ID
                         , F.MENU_URL
                         , F.MENU_PATH
                         , F.UP_MENU_ID
                         , F.BTN1_NM_CD
                         , F.BTN2_NM_CD
                         , F.BTN3_NM_CD
                         , F.BTN4_NM_CD
                         , F.BTN5_NM_CD
                         , F.BTN6_NM_CD
                         , F.BTN7_NM_CD
                         , F.BTN8_NM_CD
                         , F.BTN9_NM_CD
                         , F.BTN10_NM_CD
                         , F.LOG_YN)
        SELECT A.USER_ID
             , A.MENU_SEQ
             , A.MENU_ID
             , A.MENU_NM
             , A.MENU_URL
             , A.MENU_PATH
             , A.UP_MENU_ID
             , CASE
                   WHEN A.CRT_AUTH_YN = '1' THEN (SELECT TXT_NM
                                                  FROM ZZ_MLTI_LANG_M Z
                                                  WHERE Z.TP_CD = 'BTN'
                                                    AND Z.TXT_CD = 'BTN004'
                                                    AND LANG_CD = #{gvLangCd})
                   ELSE '' END                                          CRT_NM /* 추가 */
             , CASE
                   WHEN A.SRCH_AUTH_YN = '1' THEN (SELECT TXT_NM
                                                   FROM ZZ_MLTI_LANG_M Z
                                                   WHERE Z.TP_CD = 'BTN'
                                                     AND Z.TXT_CD = 'BTN001'
                                                     AND LANG_CD = #{gvLangCd})
                   ELSE '' END                                          SRCH_NM /* 조회 */
             , CASE
                   WHEN A.SAV_AUTH_YN = '1' THEN (SELECT TXT_NM
                                                  FROM ZZ_MLTI_LANG_M Z
                                                  WHERE Z.TP_CD = 'BTN'
                                                    AND Z.TXT_CD = 'BTN002'
                                                    AND LANG_CD = #{gvLangCd})
                   ELSE '' END                                          SAV_NM /* 저장 */
             , CASE
                   WHEN A.DEL_AUTH_YN = '1' THEN (SELECT TXT_NM
                                                  FROM ZZ_MLTI_LANG_M Z
                                                  WHERE Z.TP_CD = 'BTN'
                                                    AND Z.TXT_CD = 'BTN003'
                                                    AND LANG_CD = #{gvLangCd})
                   ELSE '' END                                          DEL_NM /* 삭제 */
             , CASE
                   WHEN A.PRT_AUTH_YN = '1' THEN (SELECT TXT_NM
                                                  FROM ZZ_MLTI_LANG_M Z
                                                  WHERE Z.TP_CD = 'BTN'
                                                    AND Z.TXT_CD = 'BTN006'
                                                    AND LANG_CD = #{gvLangCd})
                   ELSE '' END                                          PRT_NM /* 출력 */
             , CASE
                   WHEN A.EXL_AUTH_YN = '1' THEN (SELECT TXT_NM
                                                  FROM ZZ_MLTI_LANG_M Z
                                                  WHERE Z.TP_CD = 'BTN'
                                                    AND Z.TXT_CD = 'BTN005'
                                                    AND LANG_CD = #{gvLangCd})
                   ELSE '' END                                          EXL_NM /* 엑셀 */
             , CASE
                   WHEN A.ETC_1AUTH_YN = '1' THEN (SELECT TXT_NM
                                                   FROM ZZ_MLTI_LANG_M Z
                                                   WHERE Z.TP_CD = 'BTN'
                                                     AND Z.TXT_CD = A.BTN1_NM_CD
                                                     AND LANG_CD = #{gvLangCd})
                   ELSE '' END                                          BTN1_NM
             , CASE
                   WHEN A.ETC_2AUTH_YN = '1' THEN (SELECT TXT_NM
                                                   FROM ZZ_MLTI_LANG_M Z
                                                   WHERE Z.TP_CD = 'BTN'
                                                     AND Z.TXT_CD = A.BTN2_NM_CD
                                                     AND LANG_CD = #{gvLangCd})
                   ELSE '' END                                          BTN2_NM
             , CASE
                   WHEN A.ETC_3AUTH_YN = '1' THEN (SELECT TXT_NM
                                                   FROM ZZ_MLTI_LANG_M Z
                                                   WHERE Z.TP_CD = 'BTN'
                                                     AND Z.TXT_CD = A.BTN3_NM_CD
                                                     AND LANG_CD = #{gvLangCd})
                   ELSE '' END                                          BTN3_NM
             , CASE
                   WHEN A.ETC_4AUTH_YN = '1' THEN (SELECT TXT_NM
                                                   FROM ZZ_MLTI_LANG_M Z
                                                   WHERE Z.TP_CD = 'BTN'
                                                     AND Z.TXT_CD = A.BTN4_NM_CD
                                                     AND LANG_CD = #{gvLangCd})
                   ELSE '' END                                          BTN4_NM
             , CASE
                   WHEN A.ETC_5AUTH_YN = '1' THEN (SELECT TXT_NM
                                                   FROM ZZ_MLTI_LANG_M Z
                                                   WHERE Z.TP_CD = 'BTN'
                                                     AND Z.TXT_CD = A.BTN5_NM_CD
                                                     AND LANG_CD = #{gvLangCd})
                   ELSE '' END                                          BTN5_NM
             , CASE
                   WHEN A.ETC_6AUTH_YN = '1' THEN (SELECT TXT_NM
                                                   FROM ZZ_MLTI_LANG_M Z
                                                   WHERE Z.TP_CD = 'BTN'
                                                     AND Z.TXT_CD = A.BTN6_NM_CD
                                                     AND LANG_CD = #{gvLangCd})
                   ELSE '' END                                          BTN6_NM
             , CASE
                   WHEN A.ETC_7AUTH_YN = '1' THEN (SELECT TXT_NM
                                                   FROM ZZ_MLTI_LANG_M Z
                                                   WHERE Z.TP_CD = 'BTN'
                                                     AND Z.TXT_CD = A.BTN7_NM_CD
                                                     AND LANG_CD = #{gvLangCd})
                   ELSE '' END                                          BTN7_NM
             , CASE
                   WHEN A.ETC_8AUTH_YN = '1' THEN (SELECT TXT_NM
                                                   FROM ZZ_MLTI_LANG_M Z
                                                   WHERE Z.TP_CD = 'BTN'
                                                     AND Z.TXT_CD = A.BTN8_NM_CD
                                                     AND LANG_CD = #{gvLangCd})
                   ELSE '' END                                          BTN8_NM
             , CASE
                   WHEN A.ETC_9AUTH_YN = '1' THEN (SELECT TXT_NM
                                                   FROM ZZ_MLTI_LANG_M Z
                                                   WHERE Z.TP_CD = 'BTN'
                                                     AND Z.TXT_CD = A.BTN9_NM_CD
                                                     AND LANG_CD = #{gvLangCd})
                   ELSE '' END                                          BTN9_NM
             , CASE
                   WHEN A.ETC_10AUTH_YN = '1' THEN (SELECT TXT_NM
                                                    FROM ZZ_MLTI_LANG_M Z
                                                    WHERE Z.TP_CD = 'BTN'
                                                      AND Z.TXT_CD = A.BTN10_NM_CD
                                                      AND LANG_CD = #{gvLangCd})
                   ELSE '' END                                          BTN10_NM
             , A.BTN1_NM_CD
             , A.BTN2_NM_CD
             , A.BTN3_NM_CD
             , A.BTN4_NM_CD
             , A.BTN5_NM_CD
             , A.BTN6_NM_CD
             , A.BTN7_NM_CD
             , A.BTN8_NM_CD
             , A.BTN9_NM_CD
             , A.BTN10_NM_CD
             , A.LOG_YN
             , A.MENU_SHOW_YN
             , A.CRT_AUTH_YN
             , A.SRCH_AUTH_YN
             , A.SAV_AUTH_YN
             , A.DEL_AUTH_YN
             , A.PRT_AUTH_YN
             , A.EXL_AUTH_YN
             , A.ETC_1AUTH_YN
             , A.ETC_2AUTH_YN
             , A.ETC_3AUTH_YN
             , A.ETC_4AUTH_YN
             , A.ETC_5AUTH_YN
             , A.ETC_6AUTH_YN
             , A.ETC_7AUTH_YN
             , A.ETC_8AUTH_YN
             , A.ETC_9AUTH_YN
             , A.ETC_10AUTH_YN
             , LEVEL - 1                                             AS MENU_LEV
             , LPAD(' ', TO_NUMBER((LEVEL - 1) * 2), ' ') || MENU_NM AS TREE_MENU_NM
             , CASE WHEN LEVEL = 2 THEN '0' ELSE '1' END             AS TREE_STATE
             , CASE
                   WHEN A.MENU_ID LIKE 'GRP%' THEN
                       CASE
                           WHEN LEVEL = 2
                               THEN 'cell'
                           ELSE 'cell1'
                           END
                   ELSE 'cell2'
            END                                                      AS CSS_CLASS
        FROM MENU_LIST A
        WHERE A.MENU_SHOW_YN = 'Y'
            START
        WITH A.UP_MENU_ID IS NULL
        CONNECT BY PRIOR A.MENU_ID = A.UP_MENU_ID AND A.MENU_SHOW_YN = 'Y'
        ORDER SIBLINGS BY DECODE(SUBSTR(A.MENU_ID, 1, 3), 'GRP', 0, 1), A.MENU_SEQ
        ]]>
    </select>

    <select id="searchCodeList" parameterType="map" resultType="ParamMap">
        /* QueryID=UserInfoMapper.searchCodeList */
        SELECT A.CLS_CD
        , B.DTL_CD
        , (
        SELECT CD_NM
        FROM ZZ_CODE_LANG_M AA
        WHERE AA.CLS_CD IN
        <foreach item="clsCd" collection="clsCdList" open="(" separator="," close=")">
            #{clsCd}
        </foreach>
        AND AA.CLS_CD = B.CLS_CD
        AND AA.DTL_CD = B.DTL_CD
        AND AA.LANG_CD = #{gvLangCd}
        ) AS DTL_NM
        , B.REF_CD1
        , B.REF_CD2
        , B.REF_CD3
        , B.REF_CD4
        , B.REF_CD5
        , B.REF_NO1
        , B.REF_NO2
        , B.REF_NO3
        , B.REF_NO4
        , B.REF_NO5
        , B.USE_YN
        , B.SORT_SEQ
        , B.OLD_CLS_CD
        , B.OLD_DTL_CD
        , '[' || B.DTL_CD || '] ' || (
        SELECT CD_NM
        FROM ZZ_CODE_LANG_M AA
        WHERE AA.CLS_CD IN
        <foreach item="clsCd" collection="clsCdList" open="(" separator="," close=")">
            #{clsCd}
        </foreach>
        AND AA.CLS_CD = B.CLS_CD
        AND AA.DTL_CD = B.DTL_CD
        AND AA.LANG_CD = #{gvLangCd}
        ) AS SHOW_ALL_NM
        FROM ZZ_CODE_M A INNER JOIN
        ZZ_CODE_D B
        ON A.CLS_CD = B.CLS_CD
        WHERE A.CLS_CD IN
        <foreach item="clsCd" collection="clsCdList" open="(" separator="," close=")">
            #{clsCd}
        </foreach>
        ORDER BY SORT_SEQ
    </select>

    <select id="searchCodeOneList" parameterType="map" resultType="ParamMap">
        /* QueryID=UserInfoMapper.searchCodeOneList */
        SELECT A.CLS_CD
             , B.DTL_CD
             , (SELECT CD_NM
                FROM ZZ_CODE_LANG_M AA
                WHERE AA.CLS_CD = #{clsCd}
                  AND AA.DTL_CD = B.DTL_CD
                  AND AA.LANG_CD = #{gvLangCd})                            AS DTL_NM
             , B.REF_CD1
             , B.REF_CD2
             , B.REF_CD3
             , B.REF_CD4
             , B.REF_CD5
             , B.REF_NO1
             , B.REF_NO2
             , B.REF_NO3
             , B.REF_NO4
             , B.REF_NO5
             , B.USE_YN
             , B.SORT_SEQ
             , B.OLD_CLS_CD
             , B.OLD_DTL_CD
             , '[' || B.DTL_CD || '] ' || (SELECT CD_NM
                                           FROM ZZ_CODE_LANG_M AA
                                           WHERE AA.CLS_CD = #{clsCd}
                                             AND AA.DTL_CD = B.DTL_CD
                                             AND AA.LANG_CD = #{gvLangCd}) AS SHOW_ALL_NM
        FROM ZZ_CODE_M A
                 INNER JOIN
             ZZ_CODE_D B
             ON A.CLS_CD = B.CLS_CD
        WHERE A.CLS_CD = #{clsCd}
        ORDER BY SORT_SEQ
    </select>

    <select id="selectUserFavMenu" parameterType="map" resultType="ParamMap">
        /* QueryID=UserInfoMapper.selectUserFavMenu */
        SELECT USER_ID
             , USER_GRP_CD
             , PSLZ_CD AS MENU_ID
             , PSLZ_NM AS MENU_NM
             , 'cell2' AS CSS_CLASS
        FROM ZZ_PSLZ_M
        WHERE USER_ID = #{gvUserId}
          AND USER_GRP_CD = 'FAV_MENU'
        ORDER BY PSLZ_NM, PSLZ_CD
    </select>

    <select id="selectPKMenuFreq" parameterType="map" resultType="int">
        /* QueryID=UserInfoMapper.selectPKMenuFreq */
        SELECT COUNT(*) AS CNT
        FROM ZZ_SYS_USE_I
        WHERE 1 = 1
          AND MENU_ID = #{menuId}
          AND USER_ID = #{gvUserId}
          AND PROC_DT = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
    </select>

    <insert id="insertMenuFreq" parameterType="map">
        /* QueryID=COMMON_Mapper.insertMenuFreq */
        INSERT INTO ZZ_SYS_USE_I
        ( MENU_ID /*메뉴아이디*/
        , USER_ID /*사용자아이디*/
        , PROC_DT /*처리일시(날짜 + 시분초)*/
        , MENU_URL /*메뉴URL*/
        , SYS_CNTN_IP /*접속IP*/
        , USE_LOG /*사용로그*/
        )
        VALUES ( #{menuId}
               , #{gvUserId}
               , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
               , (SELECT MENU_URL FROM ZZ_MENU_M WHERE MENU_ID = #{menuId})
               , #{sysCntnIp}
               , #{useLog})

    </insert>

    <select id="selectNotiBoard" parameterType="map" resultType="ParamMap">
        SELECT A.BOAD_TP
             , A.REG_DT
             , A.REG_SEQ
             , A.BOAD_CLS
             , A.MAKE_ID
             , A.MAKE_NM
             , A.VIEW_CNT
             , A.BOAD_TITL_NM
             , A.BOAD_SEQ
             , A.CNTN_DESC
             , A.BOAD_DESC
             , A.UP_REG_DT
             , A.UP_REG_SEQ
             , A.STRT_DT
             , A.END_DT
             , A.FILE_SET_ID
             , A.FILE_NO
             , (SELECT COUNT(1)
                FROM ZZ_FILE_D Y
                WHERE Y.FILE_SET_ID = A.FILE_SET_ID AND Y.FILE_NO = A.FILE_NO) AS FILE_CNT
             , A.REG_ID
             , A.REG_DTM
             , A.UPD_ID
             , A.UPD_DTM
        FROM ZZ_BOAD_M A
        WHERE 1 = 1
--       AND A.NTBD_DIV    = '03'                                              /* 03 : 시스템공지사항 */
--       AND A.NTBD_TYPE  != '03'                                              /* 01 : 중요 , 02 : 일반 , 03 : 팝업*/
          AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.STRT_DT AND A.END_DT /* 게시기간 */
        ORDER BY A.BOAD_TP
--         , A.SYS_UP_DATE
               , A.REG_DT
               , A.REG_SEQ
    </select>

    <!-- 언어코드 전체 조회 -->
    <select id="selectLangCd" resultType="ParamMap">
        /* QueryID=UserInfoMapper.selectLangCd */
        SELECT DTL_CD
        FROM ZZ_CODE_D /* 공통코드상세 */
        WHERE CLS_CD = 'LANG_CD' /* 구분코드 */
        ORDER BY SORT_SEQ
    </select>

    <!-- 다국어 JSON 전체 조회 -->
    <select id="selectMsgByLangCd" resultType="ParamMap">
        /* QueryID=UserInfoMapper.selectMsgByLangCd */
        SELECT CLS_CD || '_' || DTL_CD AS LANG_KEY
             , CD_NM                   AS LANG_VALUE
        FROM ZZ_CODE_LANG_M
        WHERE LANG_CD = #{langCd}
        UNION ALL
        SELECT TP_CD || '_' || TXT_CD AS LANG_KEY
             , TXT_NM                 AS LANG_VALUE
        FROM ZZ_MLTI_LANG_M
        WHERE LANG_CD = #{langCd}
    </select>


</mapper>